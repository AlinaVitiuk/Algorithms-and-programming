//Програму обчислення значення многочлена n - го степеня за
//заданими значеннями коефіцієнтів многочлена та аргумента х, а також
//значення похідної вказаного многочлена у цій же точці х.

#include<iostream>      // бібліотека і відповідний заголовний файл
#include <Windows.h>    // підключення заголовного файлу
#include<math.h>        // математична бібліотека
using namespace std;    // директива для всіх ідентифікаторів в просторі імен

const int size1=20;
//Задання розмірності статичного масиву 

void vvid(int m, double a[])
{
    for (int i = 0; i < m; i++)
    {
        cout << "a_" << i << " = ";
        cin >> a[i];
    }
}
//Цикл вводу коефіцієнтів многочлена
// m - кількість коефіцієнтів
// a[] - коеф. многочлена

void vyvid(int m, double a[])
{
    if (m == 0)
    {
        cout << "(0)";
    }
    else 
    {
    for (int i = 0; i < m - 1; i++)
        cout << '(' << a[i] << ") * x^" << m - i - 1 << " + ";
    cout << '(' << a[m - 1] << ")";
    }
}
//Цикл виводу коеф. многочлена на екран

double gorn(int m, double a[], double x)
{
    long double res = a[0];
    for (int k = 1; k < m; res = res * x + a[k++]);
    cout << res;
    return res;
}
//Цикл обчислення значення многочлена за схемою Горнера
//m - кількість коефіцієнтів
//a[] - коефіцієнти
//x - аргумент

void form(int m, double a1[], double a2[])
{
    for (int i = 0; i <= m; i++)
    a2[i] = a1[i] * (m - i);
}
//Цикл формування коефіцієнтів для похідної від многочлена
//m - степінь многочлена (кількість коефіцієнтів)
//a1[] - коефіцієнти для многочлена
//a2[] - коефіцієнти для похідної

int main()
{
    SetConsoleOutputCP(1251); //Встановлення кодування Windows-1251 для виведення даних
   
    long double P;
    double x, a[size1 + 1], b[size1];
    int n;
    //х - аргумент 
    //Р - значення многочлена n - го степеня
    //а[] - коефіцієнти многочлена
    //b[] - коефіцієнти похідної від многочлена, b_k=(n-k)*a_k, 0<=k<=n-1
    //n - степінь многочлена
    
    cout << "\nВведіть степінь многочлена (n - ціле додатне число)"; 
    do
    {
        cout << "\nn = "; cin >> n;
    } while (n < 0);
    if (n == 0)
    {
    cout << "\nВведіть коефіцієнти многочлена a_0 * x^n + a_1 * x^(n-1) + ... + a_(n - 1) * x + a_n:\n";
    vvid(n + 1, a);
    }
    else
    {
        cout << "\nВведіть значення аргументу";
        cout << "\nх = "; cin >> x;
        cout << "\nВведіть коефіцієнти многочлена a_0 * x^n + a_1 * x^(n-1) + ... + a_(n - 1) * x + a_n:\n";
        vvid(n + 1, a);
    }
 //Ввід даних користувачем

    cout << "\n.....................................................................................";
    cout << "\n";
    cout << "\nМногочлен n - го степеня:";
    cout << "\nP(x) = ";
    vyvid(n + 1, a);
//Вивід многочлена на екран 
    if (n == 0)
    {

    }
    else
    {
        cout << "\nP(" << x << ") = ";
        gorn(n + 1, a, x);
    }
//Обчислення значення многочлена за заданими значеннями коефіцієнтів многочлена та аргумента х
    cout << "\n";
    cout << "\n.....................................................................................";
    cout << "\n";
    form(n, a, b);
    
    cout << "\nПохідна від многочлена:";
    cout << "\nP'(x) = ";
    vyvid(n, b);
 //Вивід похідної від многочлена на екран
    if (n == 0)
    {
        
    }
    else
    {
        cout << "\nP'(" << x << ") = "; 
        gorn(n, b, x);
    }
//Обчислення значення похідної в заданій точці х     
    cout << "\n";    
    return 0;
}
